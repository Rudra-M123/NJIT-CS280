File: complex.txt
Professor: Professor Kapleau
Name: Rudra Mehta (rm279@njit.edu)
Course: CS280
Section: 011

kFLFBx9T7XJmrr3p2F/fmAj+8DS8GqnKeq/TOIAPcuI=
--------------------------------------------
Complex numbers are an essential part of mathematics, science, and engineering. Because of this, it is necessary to be able to implement them in programming languages through the medium of classes. In this paper, I will determine the best language among Python, Java, and C++ by comparing their capabilities in implementing complex number classes. Each class will retrieve useful information and perform standard arithmetic on complex numbers. They will also be able to offset the real component of a complex number by a value and scale the complex number by a value. To have a fair comparison, I handwrote a Python complex numbers class rather than using its built-in class for complex numbers.

The first programming language we will take a look at is Python. Among these three languages, this one is the easiest and most user-friendly to implement the class in. Python's English-like syntax, lack of braces and commas, and dynamic typing significantly reduce the learning curve for individuals that need to use complex numbers. This language also features default values in constructors. These are helpful as they allow for a single constructor to capture the origin, real numbers, imaginary numbers, and complex numbers without requiring separate extra constructors. Another feature of Python is magic/dunder methods. These allow for operator overloading; a form of polymorphism in which operators are utilizable for other user-defined purposes. For complex numbers, the standard arithmetic operators are overloaded to perform their respective functions without explicitly calling a function.

The next programming language to discuss is Java. Unlike the other two languages, Java does not allow operator overloading. There is one exception of string concatenation, but that happens internally so it doesn't really count. Instead, it uses method calls and method overloading to mimic those operations. While this causes Java to suffer in writability, readability is arguably better than the other two languages; complex number operations are performed only through well-labeled method calls. By contrast, Python will require both overloaded operators for arithmetic and method calls to retrieve other information like the magnitude. Along with this, operator overloading can also lead to precedence issues. Through the Java implementation, both of these issues are avoidable and individuals can focus on implementing code to solve their problems.

When it comes to implementing a Complex number class in C++, there are both advantages and disadvantages. In Python and C++, operator overloading is a language feature but both languages implement it differently; Python uses dunder/ magic methods whereas C++ uses friend functions, memory addresses, and the operators directly. The biggest difference between Python, Java, and C++ is speed; because the latter is a compiled language, code that performs many operations on complex numbers, such as those dealing with quaternions and computer graphics, can be executed more rapidly than that in interpreted languages like the former two. This language also allows for access to low-level features such as pointers, references, and memory management. While low-level features have little use when implementing a complex class, access to these features gives more freedom to any developer or individual that may need to create a program that uses complex numbers. The biggest disadvantage of C++ over the other two languages, especially Python, is the learning curve. It is definitely the hardest to learn, but in my opinion the most worth it.

Out of the three languages, I think the superior language is C++. The reason for this is the similarity in syntax to the first language I learned, Java. While this language is the most difficult to learn, it is best for implementing a complex number class. This is because the language contains features such as overloaded operators and static typing which can be useful to perform complex operations on complex numbers. It also has other features like memory management which can be used by an individual to enhance programs that require complex numbers. For these reasons, I believe that C++ is the superior language among the three.